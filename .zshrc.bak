# Path to your oh-my-zsh installation.
export ZSH=/Users/senzhou/.oh-my-zsh

# Set name of the theme to load.
#ZSH_THEME="my_bureau"

ZSH_THEME=".my_bureau"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# auto-update checks.
DISABLE_AUTO_UPDATE="true"

# how often to auto-update (in days).
export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
  ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git osx)

#Customized git status, oh-my-zsh currently does not allow render dirty status before branch
git_custom_status() {
  local cb=$(current_branch)
  if [ -n "$cb" ]; then
    echo "$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_PREFIX$(current_branch)$ZSH_THEME_GIT_PROMPT_SUFFIX"
  fi
}

# ------------------------------------------------------------------------------
# User configuration

   #export PATH=/usr/local/bin/:$PATH
   #export PATH=/opt/local/bin:$PATH
   #export PATH=/usr/local/ggobi/bin:/Library/Frameworks/GTK+.framework/Resources/bin:$PATH
   export PATH="/usr/local/bin:/usr/local/Cellar:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/texbin:$PATH:/Users/user/scripts/"

   source $ZSH/oh-my-zsh.sh

   # You may need to manually set your language environment
   # export LANG=en_US.UTF-8

   # Preferred editor for local and remote sessions
   if [[ -n $SSH_CONNECTION ]]; then
     export EDITOR='vim'
   else
     export EDITOR='vim'
   fi

   # Compilation flags
   # export ARCHFLAGS="-arch x86_64"

   # ssh
   # export SSH_KEY_PATH="~/.ssh/dsa_id"

   # Set personal aliases, overriding those provided by oh-my-zsh libs,
   # plugins, and themes. Aliases can be placed here, though oh-my-zsh
   # users are encouraged to define aliases within the ZSH_CUSTOM folder.
   # For a full list of active aliases, run `alias`.

   # Example aliases
   # alias zshconfig="mate ~/.zshrc"
   # alias ohmyzsh="mate ~/.oh-my-zsh"
   
   # source commands that bash and zsh should share
   #if [[ -e ~/.profile ]] && emulate sh -c 'source ~/.profile'
   source ~/.profile

   #tmuxinator
   #source ~/.bin/tmuxinator.zsh

# ------------------------------------------------------------------------------
# Simple vim mode in zsh 

#tmux needs 256 colors for vim to be best
export TERM="screen-256color"

#vi mode in editing
bindkey -v

#its a bad idea to use these control bindings
   #bindkey '^P' up-history
   #bindkey '^N' down-history
   #bindkey '^?' backward-delete-char
   #bindkey '^h' backward-delete-char
   #bindkey '^w' backward-kill-word
   #bindkey '^r' history-incremental-search-backward

  
# ------------------------------------------------------------------------------
# User configuration
# change cursor shape and color based on vi mode
# these changes carry over to terminal vim
#
# function layout
# if TMUX = "" --- if cursor in insert mode --+ color = iCursor_tmux
# |                |                          + shape = 1 (vertical bar)
# |                |                        
# |                else ----------------------+ color = nCursor_tmux                        
# |                                           + shape = 0 (block)
# |
# else ----------- if cursor in insert mode --+ color = iCursor_notmux
#                  |                          + shape = 1 (vertical bar)
#                  |                        
#                  else ----------------------+ color = nCursor_notmux                        
#                                             + shape = 0 (block)

  # Specify color in Hex: yellow (FFA500) blue (3971ED) red (FF0000) orange (CCCC00)
  iCursor_tmux="FFA500"
  nCursor_tmux="3971ED"
  iCursor_notmux="CCCC00"
  ntmuxCursor_notmux="FF0000"


function zle-keymap-select zle-line-init {
   if [ "$TMUX" = "" ]; then
      case $KEYMAP in
         viins|main) 
            print -n -- "\E\033]Pl${iCursor_notmux}\033\\;\E]50;CursorShape=1\x7"
         ;;
         vicmd)  
            print -n -- "\E\033]Pl${nCursor_notmux}\033\\;\E]50;CursorShape=0\x7"
         ;; 
      esac
   else
      case $KEYMAP in
         viins|main) 
            print -n -- "\EPtmux;\E\033]Pl${iCursor_tmux}\E\033\\;\E\E]50;CursorShape=1\x7\E\\"
         ;; 
         vicmd)  
            print -n -- "\EPtmux;\E\033]Pl${nCursor_tmux}\E\033\\;\E\E]50;CursorShape=0\x7\E\\"
         ;; 
       esac
   fi

   zle reset-prompt
   zle -R
}

export KEYTIMEOUT=1
   
zle -N zle-line-init
zle -N zle-line-finish
zle -N zle-keymap-select
